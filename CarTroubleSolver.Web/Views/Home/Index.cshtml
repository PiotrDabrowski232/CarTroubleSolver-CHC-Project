@model IEnumerable<CarTroubleSolver.Logic.Dto.Accident.AccidentAdvertisementDto>;
@using CarTroubleSolver.Data.Models.Enums;
@using CarTroubleSolver.Logic.Dto.Accident
@using PagedList
@{
    var pagedList = ViewData["PagedList"] as IPagedList<AccidentAdvertisementDto>;

    string GetSeverityColor(CollisionSeverity severity)
    {
        switch (severity)
        {
            case CollisionSeverity.Severe:
                return "danger";
            case CollisionSeverity.Minor:
                return "warning";
            default:
                return "primary";
        }
    }
}

<div class="text-center homeCenter">
    @if (User.Identity.Name != null)
    {
        @if (pagedList != null)
        {
        <div class="container mt-4">
            <div class="row">
                    @foreach (var accident in pagedList)
                {
                    <div class="col-md-4 mb-4">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">Collision: @accident.CollisionSeverity</h5>
                                <p class="card-text">Applicant Name: @accident.ApplicantUserInfo.Name</p>
                                <p class="card-text">Car Brand: @accident.CarInfo.Brand</p>
                                <p class="card-text">Car Model: @accident.CarInfo.CarModels</p>
                                <p class="card-text">Car Engine Type: @accident.CarInfo.EngineType</p>
                                <p class="card-text">Car Mileage: @accident.CarInfo.Mileage</p>
                                <a asp-area="" asp-controller="Accident" asp-action="AccidentDetails"
                                   asp-route-accidentId="@accident.Id" class="btn btn-@GetSeverityColor(accident.CollisionSeverity)">Click for details</a>

                             </div>
                        </div>
                    </div>
                }
            </div>
            </div>

            <div class="text-center">
                <nav aria-label="Page navigation">
                    <ul class="pagination">

                        <li class="page-item @(pagedList.HasPreviousPage ? "" : "disabled")">
                            <a class="page-link" href="?page=@(pagedList.PageNumber - 1)" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>

                        @for (int i = 1; i <= pagedList.PageCount; i++)
                        {
                            <li class="page-item @(i == pagedList.PageNumber ? "active" : "")">
                                <a class="page-link" href="?page=@i">@i</a>
                            </li>
                        }

                        <li class="page-item @(pagedList.HasNextPage ? "" : "disabled")">
                            <a class="page-link" href="?page=@(pagedList.PageNumber + 1)" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>

                    </ul>
                </nav>
            </div>

            }
        
        else
        {
            <h4>You Don't have an accident to help.</h4>
        }

    }
    else
    {
        <h4> Log in to our service to see accidents</h4>
    }
</div>

